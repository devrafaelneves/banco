LastSessions<|||>1<|||>outraAula
LastActiveSession<|||>1<|||>outraAula
ColWidths_connform.ListSessions<|||>1<|||>163,50,50,50,50,50,10
ColsVisible_connform.ListSessions<|||>1<|||>0,1,4,6
ColPositions_connform.ListSessions<|||>1<|||>0,1,2,3,4,5,6
ColSort_connform.ListSessions<|||>1<|||>0,1
CreateDbCollation<|||>1<|||>utf8mb4_general_ci
ColWidths_frmTableEditor.listColumns<|||>1<|||>42,100,156,90,60,65,50,119,130,140,100,100
ColsVisible_frmTableEditor.listColumns<|||>1<|||>0,1,2,3,4,5,6,7,8,9,10,11
ColPositions_frmTableEditor.listColumns<|||>1<|||>0,1,2,3,4,5,6,7,8,9,10,11
ColSort_frmTableEditor.listColumns<|||>1<|||>-1,0
ColWidths_frmTableEditor.treeIndexes<|||>1<|||>642,100,80,120
ColsVisible_frmTableEditor.treeIndexes<|||>1<|||>0,1,2,3
ColPositions_frmTableEditor.treeIndexes<|||>1<|||>0,1,2,3
ColSort_frmTableEditor.treeIndexes<|||>1<|||>-1,0
ColWidths_frmTableEditor.listForeignKeys<|||>1<|||>568,80,100,80,80,80
ColsVisible_frmTableEditor.listForeignKeys<|||>1<|||>0,1,2,3,4,5
ColPositions_frmTableEditor.listForeignKeys<|||>1<|||>0,1,2,3,4,5
ColSort_frmTableEditor.listForeignKeys<|||>1<|||>-1,0
ColWidths_frmTableEditor.listCheckConstraints<|||>1<|||>200,408
ColsVisible_frmTableEditor.listCheckConstraints<|||>1<|||>0,1
ColPositions_frmTableEditor.listCheckConstraints<|||>1<|||>0,1
ColSort_frmTableEditor.listCheckConstraints<|||>1<|||>-1,0
querymemoheight<|||>3<|||>286
MainWinMaximized<|||>3<|||>0
MainWinOnMonitor<|||>3<|||>0
ColWidths_MainForm.ListDatabases<|||>1<|||>150,80,50,50,50,50,50,50,50,50,120
ColsVisible_MainForm.ListDatabases<|||>1<|||>0,1,2,3,4,5,6,7,8,9,10
ColPositions_MainForm.ListDatabases<|||>1<|||>0,1,2,3,4,5,6,7,8,9,10
ColSort_MainForm.ListDatabases<|||>1<|||>0,0
ColWidths_MainForm.ListVariables<|||>1<|||>160,200,428
ColsVisible_MainForm.ListVariables<|||>1<|||>0,1,2
ColPositions_MainForm.ListVariables<|||>1<|||>0,1,2
ColSort_MainForm.ListVariables<|||>1<|||>0,0
ColWidths_MainForm.ListStatus<|||>1<|||>160,428,100,100
ColsVisible_MainForm.ListStatus<|||>1<|||>0,1,2,3
ColPositions_MainForm.ListStatus<|||>1<|||>0,1,2,3
ColSort_MainForm.ListStatus<|||>1<|||>0,0
ColWidths_MainForm.ListProcesses<|||>1<|||>70,80,80,80,80,50,50,298
ColsVisible_MainForm.ListProcesses<|||>1<|||>0,1,2,3,4,5,6,7
ColPositions_MainForm.ListProcesses<|||>1<|||>0,1,2,3,4,5,6,7
ColSort_MainForm.ListProcesses<|||>1<|||>0,1
ColWidths_MainForm.ListCommandStats<|||>1<|||>120,100,100,100,368
ColsVisible_MainForm.ListCommandStats<|||>1<|||>0,1,2,3,4
ColPositions_MainForm.ListCommandStats<|||>1<|||>0,1,2,3,4
ColSort_MainForm.ListCommandStats<|||>1<|||>1,1
ColWidths_MainForm.ListTables<|||>1<|||>120,70,70,120,120,70,100,50,70,70,70,70,70,90,120,70,70,70,50
ColsVisible_MainForm.ListTables<|||>1<|||>0,1,2,3,4,5,6,18
ColPositions_MainForm.ListTables<|||>1<|||>0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18
ColSort_MainForm.ListTables<|||>1<|||>0,0
DateTimeEditor_CursorPos_Type4<|||>3<|||>0
MainWinWidth<|||>3<|||>993
MainWinHeight<|||>3<|||>525
SessionManager_WindowHeight<|||>3<|||>470
SessionManager_WindowLeft<|||>3<|||>130
SessionManager_WindowTop<|||>3<|||>142
SQLFile0<|||>1<|||>C:\Users\aluno\Desktop\aaaaa.sql
SQLFile1<|||>1<|||>C:\Users\aluno\Desktop\aaaa.sql
SQLFile2<|||>1<|||>C:\Users\aluno\AppData\Roaming\HeidiSQL\Backups\query-tab-2022-11-08_21-22-24-986.sql
SQLFile3<|||>1<|||>C:\Users\aluno\AppData\Roaming\HeidiSQL\Backups\query-tab-2022-11-01_20-33-26-119.sql
Servers\outraAula\SessionCreated<|||>1<|||>2022-11-01 20:33:38
Servers\outraAula\Host<|||>1<|||>127.0.0.1
Servers\outraAula\WindowsAuth<|||>3<|||>0
Servers\outraAula\CleartextPluginEnabled<|||>3<|||>0
Servers\outraAula\User<|||>1<|||>root
Servers\outraAula\Password<|||>1<|||>9
Servers\outraAula\LoginPrompt<|||>3<|||>0
Servers\outraAula\Port<|||>1<|||>3306
Servers\outraAula\NetType<|||>3<|||>0
Servers\outraAula\Compressed<|||>3<|||>0
Servers\outraAula\LocalTimeZone<|||>3<|||>0
Servers\outraAula\QueryTimeout<|||>3<|||>30
Servers\outraAula\KeepAlive<|||>3<|||>20
Servers\outraAula\FullTableStatus<|||>3<|||>1
Servers\outraAula\Databases<|||>1<|||>
Servers\outraAula\Library<|||>1<|||>libmariadb.dll
Servers\outraAula\Comment<|||>1<|||>
Servers\outraAula\StartupScriptFilename<|||>1<|||>
Servers\outraAula\TreeBackground<|||>3<|||>536870911
Servers\outraAula\SshExecutable<|||>1<|||>
Servers\outraAula\SSHtunnelHost<|||>1<|||>
Servers\outraAula\SSHtunnelHostPort<|||>3<|||>22
Servers\outraAula\SSHtunnelUser<|||>1<|||>
Servers\outraAula\SSHtunnelPassword<|||>1<|||>6
Servers\outraAula\SSHtunnelTimeout<|||>3<|||>4
Servers\outraAula\SSHtunnelPrivateKey<|||>1<|||>
Servers\outraAula\SSHtunnelPort<|||>3<|||>3307
Servers\outraAula\SSL_Active<|||>3<|||>0
Servers\outraAula\SSL_Key<|||>1<|||>
Servers\outraAula\SSL_Cert<|||>1<|||>
Servers\outraAula\SSL_CA<|||>1<|||>
Servers\outraAula\SSL_Cipher<|||>1<|||>
Servers\outraAula\IgnoreDatabasePattern<|||>1<|||>
Servers\outraAula\LogFileDdl<|||>3<|||>0
Servers\outraAula\LogFileDml<|||>3<|||>0
Servers\outraAula\LogFilePath<|||>1<|||>C:\Users\aluno\AppData\Roaming\HeidiSQL\Logs\%session\%db\%y%m%d.sql
Servers\outraAula\ServerVersionFull<|||>1<|||>10.4.24-MariaDB - mariadb.org binary distribution
Servers\outraAula\ConnectCount<|||>3<|||>9
Servers\outraAula\ServerVersion<|||>3<|||>100424
Servers\outraAula\LastConnect<|||>1<|||>2022-11-22 21:15:22
Servers\outraAula\lastUsedDB<|||>1<|||>bancon3
Servers\outraAula\RefusedCount<|||>3<|||>8
Servers\outraAula\01.11|entidades\MemoEditorHighlighter_nome<|||>1<|||>
Servers\outraAula\01.11|entidades\MemoEditorHighlighter_id_entidade<|||>1<|||>
Servers\outraAula\aula08-11|produtos\MemoEditorHighlighter_medida<|||>1<|||>
Servers\outraAula\aula08-11|produtos\Sort<|||>1<|||>1_estoque|
Servers\outraAula\bancon3|alunos\Sort<|||>1<|||>1_nomes_alunos|
Servers\outraAula\bancon3|alunos_turmas\MemoEditorHighlighter_matriculado<|||>1<|||>
Servers\outraAula\bancon3|aprovado\Sort<|||>1<|||>0_aprovado|
Servers\outraAula\bancon3|cursos\MemoEditorHighlighter_nomes_cursos<|||>1<|||>
Servers\outraAula\QueryHistory\1<|||>1<|||>2022-11-01 21:21:34|01.11|47|SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\2<|||>1<|||>2022-11-01 21:22:06|01.11|0|SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}><{{{><}}}>WHERE contas.tipo = "c"<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\3<|||>1<|||>2022-11-01 21:22:14|01.11|0|SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}><{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\4<|||>1<|||>2022-11-01 21:23:29|01.11|0|SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\5<|||>1<|||>2022-11-01 21:23:34|01.11|0|SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\6<|||>1<|||>2022-11-01 21:25:28|01.11|47|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\7<|||>1<|||>2022-11-01 21:28:33|01.11|31|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's<{{{><}}}>*/<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "deb"<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}>UNION <{{{><}}}><{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\8<|||>1<|||>2022-11-01 21:29:09|01.11|0|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's<{{{><}}}>*/<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor,<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "deb"<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}>UNION <{{{><}}}><{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor,<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\9<|||>1<|||>2022-11-01 21:33:33|01.11|0|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM;<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's;<{{{><}}}>-Ele permite que separem as colunas quando for fazer o relatório de QuerySQL;<{{{><}}}>*/<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS debito,<{{{><}}}>contas.tipo,<{{{><}}}>0 AS credito<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "deb"<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}>UNION <{{{><}}}><{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS credito,<{{{><}}}>contas.tipo,<{{{><}}}>0 AS debito<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\11<|||>1<|||>2022-11-01 21:35:11|01.11|0|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM;<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's;<{{{><}}}>-Ele permite que separem as colunas quando for fazer o relatório de QuerySQL;<{{{><}}}>*/<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS debito,<{{{><}}}>/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>0 AS credito<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "deb"<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}>UNION <{{{><}}}><{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS debito,<{{{><}}}>/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>0 AS credito<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\12<|||>1<|||>2022-11-01 21:35:50|01.11|0|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM;<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's;<{{{><}}}>-Ele permite que separem as colunas quando for fazer o relatório de QuerySQL;<{{{><}}}>*/<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS debito,<{{{><}}}>/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>0 AS credito<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "deb"<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}>UNION <{{{><}}}><{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS credito,<{{{><}}}>/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>0 AS debito<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}>GROUP BY entidades.nome<{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\10<|||>1<|||>2022-11-01 21:36:08|01.11|0|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM;<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's;<{{{><}}}>-Ele permite que separem as colunas quando for fazer o relatório de QuerySQL;<{{{><}}}>*/<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS debito,<{{{><}}}>/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>0 AS credito<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "deb"<{{{><}}}><{{{><}}}><{{{><}}}>UNION <{{{><}}}><{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS credito,<{{{><}}}>/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>0 AS debito<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}><{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\13<|||>1<|||>2022-11-01 21:37:55|01.11|0|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM;<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's;<{{{><}}}>-Ele permite que separem as colunas quando for fazer o relatório de QuerySQL;<{{{><}}}>*/<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS debito,<{{{><}}}>/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>0 AS credito<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "deb"<{{{><}}}><{{{><}}}><{{{><}}}>UNION <{{{><}}}><{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>0 AS debito,<{{{><}}}>contas.valor AS credito<{{{><}}}>/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}><{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}><{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\14<|||>1<|||>2022-11-01 21:50:47|01.11|63|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM;<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's;<{{{><}}}>-Ele permite que separem as colunas quando for fazer o relatório de QuerySQL;<{{{><}}}>*/<{{{><}}}>SELECT <{{{><}}}>	saldo.nome,<{{{><}}}>	SUM(saldo.credito),<{{{><}}}>	SUM(saldo.debito),<{{{><}}}>	SUM(saldo.credito) - SUM(saldo.debito) AS saldo<{{{><}}}>FROM<{{{><}}}>(<{{{><}}}>	<{{{><}}}>/*PRIMEIRA PARTE DA TERCEIRA QUESTAO*/<{{{><}}}>SELECT <{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS debito,<{{{><}}}>				/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>0 AS credito<{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "deb"<{{{><}}}><{{{><}}}><{{{><}}}>UNION <{{{><}}}><{{{><}}}><{{{><}}}>SELECT <{{{><}}}>entidades.nome,<{{{><}}}>0 AS debito,	/*tem que ser na ordem CERTA pra aparecer certo, se colocar abaixo do contas valor ali vai dar errado*/<{{{><}}}>contas.valor AS credito<{{{><}}}>				/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}>)AS saldo<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\15<|||>1<|||>2022-11-01 21:51:33|01.11|0|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM;<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's;<{{{><}}}>-Ele permite que separem as colunas quando for fazer o relatório de QuerySQL;<{{{><}}}>*/<{{{><}}}>SELECT <{{{><}}}>	saldo.nome,<{{{><}}}>	SUM(saldo.credito) AS credito,<{{{><}}}>	SUM(saldo.debito) AS  debito,<{{{><}}}>	SUM(saldo.credito) - SUM(saldo.debito) AS saldo<{{{><}}}>FROM<{{{><}}}>(<{{{><}}}>	<{{{><}}}>/*PRIMEIRA PARTE DA TERCEIRA QUESTAO*/<{{{><}}}>SELECT <{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS debito,<{{{><}}}>				/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>0 AS credito<{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "deb"<{{{><}}}><{{{><}}}><{{{><}}}>UNION <{{{><}}}><{{{><}}}><{{{><}}}>SELECT <{{{><}}}>entidades.nome,<{{{><}}}>0 AS debito,	/*tem que ser na ordem CERTA pra aparecer certo, se colocar abaixo do contas valor ali vai dar errado*/<{{{><}}}>contas.valor AS credito<{{{><}}}>				/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}>)AS saldo<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\16<|||>1<|||>2022-11-01 21:52:11|01.11|0|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM;<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's;<{{{><}}}>-Ele permite que separem as colunas quando for fazer o relatório de QuerySQL;<{{{><}}}>*/<{{{><}}}>SELECT <{{{><}}}>	saldo.nome,<{{{><}}}>	SUM(saldo.credito) AS credito,<{{{><}}}>	SUM(saldo.debito) AS  debito,<{{{><}}}>	SUM(saldo.credito) - SUM(saldo.debito) AS saldo<{{{><}}}>FROM<{{{><}}}>(<{{{><}}}>	<{{{><}}}>/*PRIMEIRA PARTE DA TERCEIRA QUESTAO*/<{{{><}}}>SELECT <{{{><}}}>entidades.nome,<{{{><}}}>contas.valor AS debito,<{{{><}}}>				/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>0 AS credito<{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "deb"<{{{><}}}><{{{><}}}><{{{><}}}>UNION <{{{><}}}><{{{><}}}><{{{><}}}>SELECT <{{{><}}}>entidades.nome,<{{{><}}}>0 AS debito,	/*tem que ser na ordem CERTA pra aparecer certo, se colocar abaixo do contas valor ali vai dar errado*/<{{{><}}}>contas.valor AS credito<{{{><}}}>				/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}>)AS saldo<{{{><}}}>GROUP BY nome <{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\17<|||>1<|||>2022-11-01 21:58:45|01.11|0|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM;<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's;<{{{><}}}>-Ele permite que separem as colunas quando for fazer o relatório de QuerySQL;<{{{><}}}><{{{><}}}><{{{><}}}>------------UNION------------<{{{><}}}>	*MESMO NUMERO DE ELEMENTOS;<{{{><}}}>	*MESMA ORDEM DE ELEMENTOS;<{{{><}}}>	<{{{><}}}>------------IF---------------<{{{><}}}>IF (condicao, true, false)<{{{><}}}>	EXEMPLO = IF  (ativo=1, "ativo", "inativo")<{{{><}}}><{{{><}}}>*/<{{{><}}}><{{{><}}}>/*TERCEIRA QUESTAO INTEIRA*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>	saldo.nome,<{{{><}}}>	SUM(saldo.credito) AS credito,<{{{><}}}>	SUM(saldo.debito) AS  debito,<{{{><}}}>	SUM(saldo.credito) - SUM(saldo.debito) AS saldo<{{{><}}}>FROM<{{{><}}}><{{{><}}}>(<{{{><}}}>	<{{{><}}}>/*PRIMEIRA PARTE DA TERCEIRA QUESTAO*/<{{{><}}}>SELECT <{{{><}}}>	entidades.nome,<{{{><}}}>	contas.valor AS debito,<{{{><}}}>				/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>	0 AS credito<{{{><}}}>FROM<{{{><}}}>	contas<{{{><}}}>INNER JOIN entidades<{{{><}}}>ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "deb"<{{{><}}}><{{{><}}}><{{{><}}}>UNION <{{{><}}}><{{{><}}}><{{{><}}}>SELECT <{{{><}}}>	entidades.nome,<{{{><}}}>	0 AS debito,	/*tem que ser na ordem CERTA pra aparecer certo, se colocar abaixo do contas valor ali vai dar errado*/<{{{><}}}>	contas.valor AS credito<{{{><}}}>				/*contas.tipo, NAO PRECISO MAIS POR CAUSA DO 0 AS E TAL*/<{{{><}}}>FROM<{{{><}}}>	contas<{{{><}}}>INNER JOIN entidades <{{{><}}}>ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>WHERE contas.tipo = "cred"<{{{><}}}>)<{{{><}}}>AS saldo<{{{><}}}>GROUP BY nome <{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\outraAula\QueryHistory\18<|||>1<|||>2022-11-01 22:05:30|01.11|0|/*<{{{><}}}>3 QUESTOES, AS DUAS PRIMEIRAS PRA APARECER A ENTIDADE E O VALOR DE CADA, TANTO EM CREDITO E DEBITO<{{{><}}}>A TERCEIRA É A PERGUNTA O SALDO, QUE NO CASO É O VALOR DE SALDO MENOS O CREDITO QUE ELE TEM;<{{{><}}}><{{{><}}}>VAMOS APRENDER USAR O "UNION" QUE SERVE PARA UNIR DOIS SQL's;<{{{><}}}>-Ele permite que separem as colunas quando for fazer o relatório de QuerySQL;<{{{><}}}><{{{><}}}><{{{><}}}>------------UNION------------<{{{><}}}>	*MESMO NUMERO DE ELEMENTOS;<{{{><}}}>	*MESMA ORDEM DE ELEMENTOS;<{{{><}}}>	<{{{><}}}>------------IF---------------<{{{><}}}>IF (condicao, true, false)<{{{><}}}>	EXEMPLO = IF  (ativo=1, "ativo", "inativo")<{{{><}}}><{{{><}}}>*/ <{{{><}}}>/* O 'IF' AJUDA A TERCEIRA QUESTAO FICAR MAIS RESUMIDA EM QUESTAO DE LINHAS*/<{{{><}}}><{{{><}}}><{{{><}}}>SELECT <{{{><}}}>	entidades.nome,<{{{><}}}>	if (contas.tipo = "deb", contas.valor, 0) AS debito,<{{{><}}}>	if (contas.tipo = "cred", contas.valor, 0) AS credito<{{{><}}}>FROM contas<{{{><}}}>INNER JOIN entidades <{{{><}}}>ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}><{{{><}}}><{{{><}}}>/*TERCEIRA QUESTAO INTEIRA*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*<{{{><}}}>PRIMEIRA E A SEGUNDA QUESTÃO BASICAMENTE<{{{><}}}>SELECT <{{{><}}}><{{{><}}}>entidades.nome,<{{{><}}}>sum(contas.valor),<{{{><}}}>contas.tipo<{{{><}}}><{{{><}}}>FROM<{{{><}}}>contas<{{{><}}}><{{{><}}}>INNER JOIN entidades ON (contas.id_entidades = entidades.id_entidades)<{{{><}}}>GROUP BY entidades.nome<{{{><}}}>*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>/*WHERE contas.tipo = "cred"*/<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
